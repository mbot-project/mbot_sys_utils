#!/bin/bash

EXPECTED_ARGS=2
E_BADARGS=65

if [ $# -lt 1 ] || [ $# -gt 2 ]; 
then
  echo "Usage: $0 [load | run | flash | disable] <uf2_file>"
  exit $E_BADARGS
fi

OPERATION=$1
UF2_FILE=$2

UF2_FILENAME=$(basename "$UF2_FILE" .uf2)

# GPIO Pin Mapping:
# RUN (Pin 7) and LOAD (Pin 11)
# Jetson: Pin 7 -> GPIO 216, Pin 11 -> GPIO 50
#   Pi 4: Pin 7 -> GPIO 4, Pin 11 -> GPIO 17
#   Pi 5: Pin 7 -> GPIO 575, Pin 11 -> GPIO 588
if grep -q "Raspberry Pi 4" /proc/device-tree/model; then
  echo "Detected Raspberry Pi 4, entering $1 mode..."
  BTLD_PIN=4
  RUN_PIN=17
elif grep -q "Raspberry Pi 5" /proc/device-tree/model; then
  echo "Detected Raspberry Pi 5, entering $1 mode..."
  BTLD_PIN=4
  RUN_PIN=17
elif grep -q "NVIDIA Jetson" /proc/device-tree/model; then
  echo "Detected NVIDIA Jetson, entering $1 mode..."
  BTLD_PIN=50
  RUN_PIN=216
else
  echo "ERROR: Unknown hardware!"
  exit 1
fi

pinctrl set $BTLD_PIN op
pinctrl set $RUN_PIN op

sleep 0.1

# Create ~/.mbot_info.txt if it doesn't exist
if [ ! -f ~/.mbot_info.txt ]; then
    touch ~/.mbot_info.txt
fi

case "$OPERATION" in
    "load"|"run"|"flash"|"disable")
        # notice that for all cases, we consdier the RUN_PIN is high
        # which set by services/mbot_start_networking.py 
        case "$OPERATION" in
            "load")
                echo "Loading action for $UF2_FILE..."
                if [ -n "$UF2_FILE" ]; then
                    pinctrl set $RUN_PIN dl
                    sleep 0.1
                    pinctrl set $BTLD_PIN dl
                    sleep 0.5
                    pinctrl set $RUN_PIN dh
                    sleep 0.5
                    sudo picotool load $UF2_FILE
                    sleep 0.5
                else
                    echo "Missing UF2 file for 'load' operation."
                fi
                ;;
            "run")
                echo "Running action for loaded UF2_FILE..."
                pinctrl set $RUN_PIN dl
                sleep 0.1
                pinctrl set $BTLD_PIN dh
                sleep 0.5
                pinctrl set $RUN_PIN dh
                sleep 1
                ;;
            "flash")
                echo "Flashing action for $UF2_FILE..."
                if [ -n "$UF2_FILE" ]; then
                    pinctrl set $RUN_PIN dl
                    sleep 0.1
                    pinctrl set $BTLD_PIN dl
                    sleep 0.5
                    pinctrl set $RUN_PIN dh
                    sleep 0.5
                    sudo picotool load $UF2_FILE
                    LOAD_STATUS=$?
                    sleep 0.5
                    pinctrl set $BTLD_PIN dh
                    sleep 0.5
                    sudo picotool reboot
                    REBOOT_STATUS=$?

                    # If both picotool commands were successful
                    if [ $LOAD_STATUS -eq 0 ] && [ $REBOOT_STATUS -eq 0 ]; then
                        # Check the UF2 file name and add appropriate content to .mbot_info.txt
                        if [[ "$UF2_FILENAME" == mbot_calibrate* ]]; then
                            # Calibration file
                            if grep -q "^mbot_calibration: " ~/.mbot_info.txt; then
                                sed -i "s/^mbot_calibration: .*/mbot_calibration: $UF2_FILENAME/" ~/.mbot_info.txt
                            else
                                echo "mbot_calibration: $UF2_FILENAME" >> ~/.mbot_info.txt
                            fi
                        elif [[ "$UF2_FILENAME" == mbot_classic_v* || "$UF2_FILENAME" == mbot_omni_v* ]]; then
                            # Firmware file
                            if grep -q "^mbot_firmware: " ~/.mbot_info.txt; then
                                sed -i "s/^mbot_firmware: .*/mbot_firmware: $UF2_FILENAME/" ~/.mbot_info.txt
                            else
                                echo "mbot_firmware: $UF2_FILENAME" >> ~/.mbot_info.txt
                            fi
                        fi
                    else
                        echo "ERROR: Flash operation failed."
                    fi
                else
                    echo "Missing UF2 file for 'flash' operation."
                fi
                ;;
            "disable")
                echo "Disable action..."
                pinctrl set $BTLD_PIN dh
                sleep 0.5
                pinctrl set $RUN_PIN dl
                sleep 1
                ;;
        esac
        ;;
    *)
        echo "'$OPERATION' is not a valid operation. Please provide one of the following operations: load, run, flash, disable"
        ;;
esac